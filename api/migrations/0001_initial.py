# Generated by Django 3.0 on 2022-04-26 03:57

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Bin_Model',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('material', models.CharField(choices=[('PLASTIC', 'plastic'), ('METAL', 'metal')], max_length=7)),
                ('color', models.CharField(choices=[('FORREST-GREEN', 'forrest-green'), ('OLIVE-GREEN', 'olive-green'), ('SPRING-GREEN', 'spring-green')], max_length=14)),
                ('length', models.IntegerField()),
                ('width', models.IntegerField()),
                ('height', models.IntegerField()),
                ('volume_gallons', models.IntegerField()),
                ('weight_lbs', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('street', models.CharField(max_length=100)),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=100)),
                ('property_type', models.CharField(choices=[('WAREHOUSE', 'warehouse'), ('RESIDENTIAL', 'residential'), ('COMMERICAL', 'commercial')], max_length=11)),
            ],
        ),
        migrations.CreateModel(
            name='Route',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day_of_week', models.CharField(choices=[('MONDAY', 'monday'), ('TUESDAY', 'tuesday'), ('WEDNESDAY', 'wednesday'), ('THURSDAY', 'thursday'), ('FRIDAY', 'friday')], max_length=9)),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Order_Bin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_date', models.DateField()),
                ('fuflilled_date', models.DateField()),
                ('status', models.CharField(choices=[('PROCESSING', 'processing'), ('DELIVERED', 'delivered')], max_length=10)),
                ('bin_model_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Bin_Model')),
                ('location_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Location')),
            ],
        ),
        migrations.CreateModel(
            name='Mango',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('ripe', models.BooleanField()),
                ('color', models.CharField(max_length=100)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='location',
            name='route',
            field=models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.CASCADE, to='api.Route'),
        ),
        migrations.AddField(
            model_name='location',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Bin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('barcode', models.IntegerField()),
                ('active', models.BooleanField()),
                ('bin_model_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Bin_Model')),
                ('location_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Location')),
            ],
        ),
    ]
